#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

struct Vertex
{
	vec3 pos;
    float a;
    vec3 color;
    float b;
	vec2 uv;
    vec2 c;
};

// Binding 0 : Position storage buffer
layout(std140, binding = 0) buffer Pos 
{
   Vertex vertices[];
};

layout (local_size_x = 64) in;

layout (binding = 1) uniform UBO 
{
	float time;
	int vertexCount;
} ubo;

void main() 
{
    // Current SSBO index
    uint index = gl_GlobalInvocationID.x;

    if (index >= ubo.vertexCount) 
		return;	

    vec3 initialPos = vertices[index].color;
    vec2 uv = vertices[index].uv;
    float s = sin(ubo.time);
    vec3 pos = initialPos + normalize(initialPos) * vec3(uv.x * s,  uv.y * s, (uv.x - uv.y) * s);
    
    vertices[index].pos = pos;
    vertices[index].color = initialPos;
    vertices[index].uv = uv;
}